version: "3.2"

services:


  python-3.6-dev:
    # Run container this way:
    # docker-compose -f docker-compose-ci.yml run --rm python-3.6-dev bash
    # This opens terminal inside container. Project directory is mounted
    # into container.
    image: hivemind/python:3.6-dev
    build:
      context: .
      dockerfile: ./scripts/ci/python/3.6/dev.dockerfile
      args:
        - user=${USER}
        - workdir=/home/${USER}/hivemind
    user: ${USER}
    # security_opt:
    #   # Significant performance boost (about 5%), but very insecure.
    #   # See https://medium.com/better-programming/faster-python-in-docker-d1a71a9b9917
    #   # See https://docs.docker.com/engine/security/seccomp/
    #   - seccomp:unconfined
    shm_size: 2g
    volumes:
      # Sockets of postgres servers on dockers.
      - "postgres-10-run:/var/run/postgres-10"
      - "postgres-12-run:/var/run/postgres-12"
      # Sockets of postgres servers on host.
      - "/var/run/postgresql:/var/run/postgresql"
      # For keeping python dependencies created in docker.
      - "python-3.6-dev:/home/${USER}"
      # Application stuff from host.
      - "$PWD/hive:$PWD/hive"
      - "$PWD/tests:$PWD/tests"
      - "$PWD/hive.conf:$PWD/hive.conf"
      - "$PWD/pyproject.toml:$PWD/pyproject.toml"
      - "$PWD/README.md:$PWD/README.md"
      - "$PWD/setup.cfg:$PWD/setup.cfg"
      - "$PWD/setup.py:$PWD/setup.py"
      - "$PWD/tox.ini:$PWD/tox.ini"


  python-3.6:
    image: hivemind/python:3.6
    build:
      context: .
      dockerfile: ./scripts/ci/python/3.6/Dockerfile
      args:
        - user=worker
    user: worker
    shm_size: 2g
    volumes:
      # Sockets of postgres servers on host.
      - "/var/run/postgresql:/var/run/postgresql"


  python-3.8:
    image: hivemind/python:3.8
    build:
      context: .
      dockerfile: ./scripts/ci/python/3.8/Dockerfile
      args:
        - user=worker
    user: worker
    shm_size: 2g
    volumes:
      # Sockets of postgres servers on host.
      - "/var/run/postgresql:/var/run/postgresql"


  postgres-10:
    image: hivemind/postgres:10
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./scripts/ci/postgres/10/Dockerfile
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - $PWD/$POSTGRES_10_CONF_FILE:/etc/postgresql/postgresql.conf:ro
      - postgres-10-run:/var/run/postgresql
    ports:
      - "${POSTGRES_10_PUBLISHED_PORT}:5432"
    shm_size: 12g
    command: [
      "postgres",
      "-c", "config_file=/etc/postgresql/postgresql.conf"
    ]


  postgres-12:
    image: hivemind/postgres:12
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./scripts/ci/postgres/12/Dockerfile
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - $PWD/$POSTGRES_12_CONF_FILE:/etc/postgresql/postgresql.conf:ro
      - postgres-12-run:/var/run/postgresql
    ports:
      - "${POSTGRES_12_PUBLISHED_PORT}:5432"
    shm_size: 12g
    command: [
      "postgres",
      "-c", "config_file=/etc/postgresql/postgresql.conf"
    ]


  hived-node:
    image: $HIVED_IMAGE
    restart: unless-stopped
    ports:
      - "$HIVED_PUBLISHED_WS_PORT:28090" # websocket
      - "$HIVED_PUBLISHED_HTTP_PORT:28091"
    shm_size: 12g
    entrypoint: /usr/local/hive/consensus/entrypoint.sh
    command: [
      "--replay-blockchain",
      "--stop-replay-at-block 5000000"
    ]
    volumes:
      - $PWD/scripts/ci/hived-node/entrypoint.sh:/usr/local/hive/consensus/entrypoint.sh
      - $PWD/scripts/ci/hived-node/config.ini:/usr/local/hive/consensus/datadir/config.ini
      - ${HIVED_BLOCK_LOG_FILE}:/usr/local/hive/consensus/datadir/blockchain/block_log
      - hived-node-datadir:/usr/local/hive/consensus/datadir


volumes:
  postgres-10-run:
  postgres-12-run:
  hived-node-datadir:
  python-3.6-dev:
